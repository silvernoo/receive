name: Docker Image CI

on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 0 * * 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64v8,arm32v7,amd64]
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Download & Build
        run: |
          go mod download
          make all-arch

      - name: Build the Docker image
        run: |
          if [[ "$ARCH" == "amd64" ]]; then export BIN="bin/receive-linux-amd64"; fi
          if [[ "$ARCH" == "arm32v7" ]]; then export BIN="bin/receive-linux-arm"; fi
          if [[ "$ARCH" == "arm64v8" ]]; then export BIN="bin/receive-linux-armv8"; fi
          docker build --build-arg="ARCH=$ARCH" --build-arg="BIN=$BIN" --file Dockerfile  -t matosama/receive:"$ARCH" .
        env:
          ARCH: ${{ matrix.arch }}

      - name: Log in to registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login docker.io -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Push image
        run: docker push matosama/receive:"$ARCH"
        env:
          ARCH: ${{ matrix.arch }}
